<Page x:Class="app.Views.Pages.MenuView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:vm="clr-namespace:app.ViewModels"
      xmlns:local="clr-namespace:app.Views.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="900"
      Title="MenuView">
    <Page.DataContext>
        <vm:MenuViewModel/>
    </Page.DataContext>
    <Page.Resources>
        <!-- Стиль для ToggleButton, который скрывает квадратный флажок и меняет цвет фона -->
       
        </Page.Resources>
        <Border Margin="0 60 0 0" Padding="0 0 20 0">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180"/>
            <ColumnDefinition Width="*"/> 
        </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0" Style="{DynamicResource changeTheme}" Height="450"> 
                <TextBlock Text="{DynamicResource product_category}"  Margin="0 15 0 5"
                           FontWeight="Bold" TextAlignment="Center" FontSize="15"/>
                <StackPanel Orientation="Vertical" Margin="5 0 5 10">
                    <!-- Пять ToggleButtons с привязкой к команде в ViewModel -->
                    <ToggleButton Style="{StaticResource TextOnlyCheckBoxStyle}" Content="{DynamicResource option1}" 
                        Command="{Binding CheckBoxCommand}" CommandParameter="{DynamicResource option1}" Margin="0 0 0 2"
                                  IsChecked="{Binding IsCheckedToggleButton1, UpdateSourceTrigger=PropertyChanged}"/>
                    <ToggleButton Style="{StaticResource TextOnlyCheckBoxStyle}" Content="{DynamicResource option2}" 
                        Command="{Binding CheckBoxCommand}" CommandParameter="{DynamicResource option2}" Margin="0 0 0 2"
                                  IsChecked="{Binding IsCheckedToggleButton2, UpdateSourceTrigger=PropertyChanged}"/>
                    <ToggleButton Style="{StaticResource TextOnlyCheckBoxStyle}" Content="{DynamicResource option3}" 
                        Command="{Binding CheckBoxCommand}" CommandParameter="{DynamicResource option3}" Margin="0 0 0 2"
                                  IsChecked="{Binding IsCheckedToggleButton3, UpdateSourceTrigger=PropertyChanged}"/>
                    <ToggleButton Style="{StaticResource TextOnlyCheckBoxStyle}" Content="{DynamicResource option4}" 
                        Command="{Binding CheckBoxCommand}" CommandParameter="{DynamicResource option4}" Margin="0 0 0 2"
                                  IsChecked="{Binding IsCheckedToggleButton4, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <TextBox Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Style="{DynamicResource searchInput}" Width="150" Background="Transparent" Margin="0 0 0 15"/>

                <StackPanel>
                    
                </StackPanel>
                
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Width="150"> 
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource price_from}" Margin="5,0" VerticalAlignment="Center" FontWeight="Bold"/>
                            <TextBox Width="70" Style="{DynamicResource customInputOrange}"  Padding="6 6 0 0"
                                Text="{Binding ElementName=slider, Path=Minimum, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                        </StackPanel>
                        <TextBlock Text="{Binding ErrorRangeFrom, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                           Foreground="#D7596D" FontSize="12" FontWeight="Medium" FontFamily="Montserrat" Margin="0 2 0 10"
                           TextWrapping="Wrap" RenderTransformOrigin="0.5,0.5"/>
                    </StackPanel>
 
                    <StackPanel Orientation="Vertical"  HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource price_to}" Margin="5,0" VerticalAlignment="Center" FontWeight="Bold"/>
                            <TextBox Width="70" Style="{DynamicResource customInputOrange}" Foreground="Black" Padding="6 6 0 0"
                                Text="{Binding ElementName=slider, Path=Maximum, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                        </StackPanel>
                        <TextBlock Text="{Binding ErrorRangeTo, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                           Foreground="#D7596D" FontSize="12" FontWeight="Medium" FontFamily="Montserrat" Margin="0 2 0 0"
                           TextWrapping="Wrap" RenderTransformOrigin="0.5,0.5"/>
                    </StackPanel>
 
                    <Slider x:Name="slider" Value="{Binding SliderValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
            TickFrequency="1" Maximum="500" Minimum="130" Style="{DynamicResource CustomSliderStyle}" />
                    <Button Command="{Binding FindButtonCommand}"
                        Style="{DynamicResource customButtonOrange}"
                        Content="{DynamicResource Find}"
                        Margin="5"/>
                    <Button Command="{Binding ResetButtonCommand}"
                        Style="{DynamicResource customButtonOrange}"
                        Content="{DynamicResource Reset}"
                        Margin="5"/>       
                </StackPanel> 
        </StackPanel>

        <ListView ItemsSource="{Binding Products, UpdateSourceTrigger=PropertyChanged}" 
                  Grid.Column="1"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  HorizontalContentAlignment="Center"
                  ScrollViewer.CanContentScroll="False" 
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  Background="Transparent" BorderBrush="Transparent"
                  SelectedItem="{Binding SelectedItemForListProducts, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border>
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="{x:Static MouseAction.LeftClick}"
                                                       Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.SelectedItemForListProducts}"
                                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=SelectedItem}"/>
                                    </Border.InputBindings>
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="Black" BorderThickness="1"  Margin="10" Padding="15">
                        <StackPanel Orientation="Vertical">
                            <Image Stretch="Fill" Source="{Binding Image}" Width="120" Height="120"/>
                            <TextBlock Text="{Binding ProductName}" Width="100" FontWeight="Bold" TextAlignment="Center" TextWrapping="Wrap" Margin="2"/>
                                <TextBlock Text="{Binding Price, StringFormat={}{0:C2}}" Width="100" FontWeight="Bold" TextAlignment="Center" TextWrapping="Wrap" Margin="2"/>
                            <DockPanel>
                                    <Button Style="{DynamicResource customButtonOrange}" DockPanel.Dock="Left" Visibility="{Binding RelativeSource={RelativeSource AncestorType ={x:Type ListView}}, Path=DataContext.VisibilityEditProductButton, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType ={x:Type ListView}}, Path=DataContext.EditProductCommand}"
                                    CommandParameter="{Binding}" Content="{DynamicResource change}" Margin="5"/>
                                <Button  Style="{DynamicResource customButtonOrange}" DockPanel.Dock="Right"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType ={x:Type ListView}}, Path=DataContext.AddToBasketCommand}"
                                    CommandParameter="{Binding}" Content="{DynamicResource card}" Margin="5"/>
                            </DockPanel>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        </Grid>
    </Border>
</Page>
